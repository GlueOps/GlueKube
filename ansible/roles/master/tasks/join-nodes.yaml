- name: List current nodes
  ansible.builtin.shell: |
    export KUBECONFIG=/opt/kubernetes/.kube/config
    kubectl get nodes --no-headers -o custom-columns=":metadata.name"
  tags: join_nodes
  register: current_cluster_nodes
  when: inventory_hostname == groups['masters'][0]

- name: List of nodes will join the cluster
  ansible.builtin.debug:
    var: inventory_hostname
  when: inventory_hostname in groups['masters'] and inventory_hostname not in hostvars[groups['masters'][0]]['current_cluster_nodes'].stdout_lines
  tags: join_nodes

- name: Join the control-node to the Kubernetes cluster
  ansible.builtin.command: sh /opt/token.sh
  args:
    creates: /opt/kubernetes/join_command.sh
  tags: join_worker
  when: inventory_hostname in groups['masters'] and inventory_hostname not in hostvars[groups['masters'][0]]['current_cluster_nodes'].stdout_lines

# create a directory for the kubeconfig file
- name: Generate Kubeadm configuration
  ansible.builtin.template:
    src: "kubeadm-stacked-config.j2"
    dest: "{{ kubeadm_config_file }}"
    owner: root
    group: root
    mode: "0644"
  tags: kubeconfig_setup
  when: 
    - inventory_hostname in groups['masters'] and inventory_hostname not in hostvars[groups['masters'][0]]['current_cluster_nodes'].stdout_lines


- name: Create kubeconfig directory
  ansible.builtin.file:
    path: "/opt/kubernetes/.kube"
    state: directory
    mode: "0755"
  tags: kubeconfig_setup
  when: 
    - inventory_hostname in groups['masters'] and inventory_hostname not in hostvars[groups['masters'][0]]['current_cluster_nodes'].stdout_lines


- name: Copy kubeconfig to user home directory
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "/opt/kubernetes/.kube/config"
    remote_src: true
    owner: "root"
    group: "root"
    mode: "0644"
  when: 
    - inventory_hostname in groups['masters'] and inventory_hostname not in hostvars[groups['masters'][0]]['current_cluster_nodes'].stdout_lines
  tags: kubeconfig_setup