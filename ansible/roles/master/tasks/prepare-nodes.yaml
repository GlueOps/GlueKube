---
- name: Disable swap immediately
  command: swapoff -a
  
- name: Load required kernel modules
  community.general.modprobe:
    name: overlay
    state: present

- name: Load required kernel modules
  community.general.modprobe:
    name: br_netfilter
    state: present

- name: Apply sysctl settings
  ansible.posix.sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1

- name: Disable swap
  ansible.posix.sysctl:
    name: vm.swappiness
    value: 0

- name: Update apt package cache
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600 # Update cache if older than 1 hour (in seconds)

- name: Upgrade all installed packages
  ansible.builtin.apt:
    upgrade: dist 

- name: Install dependencies for containerd
  ansible.builtin.apt:
    name:
      - software-properties-common
      - gpg
      - curl
      - apt-transport-https
      - ca-certificates
      - jq
    state: present

- name: Create directory for Docker's GPG key
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: "0755"

- name: Add Docker's official GPG key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    keyring: /etc/apt/keyrings/docker.gpg
    state: present

- name: Print architecture variables
  ansible.builtin.debug:
    msg: "Architecture: {{ ansible_architecture }}, Codename: {{ ansible_lsb.codename }}"

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: >-
      deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg]
      https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
    filename: docker
    state: present

- name: Install containerd
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: true

- name: Add Docker group
  ansible.builtin.group:
    name: docker
    state: present

- name: Add user to Docker group
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true

- name: Enable and start Docker services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
    state: started
  loop:
    - docker.service
    - containerd.service

- name: Create containerd configuration directory
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: "0755"

- name: Generate containerd default configuration
  ansible.builtin.command: containerd config default
  register: containerd_config

- name: Save containerd config
  ansible.builtin.copy:
    content: "{{ containerd_config.stdout }}"
    dest: /etc/containerd/config.toml
    mode: "0755"

- name: Enable SystemdCgroup in containerd configuration
  ansible.builtin.lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^(\s*)SystemdCgroup\s*=\s*false'
    line: '\1SystemdCgroup = true'
    backrefs: true

- name: Reload systemd and enable containerd
  ansible.builtin.systemd:
    name: containerd
    enabled: true
    state: restarted

- name: Download Kubernetes GPG key
  ansible.builtin.apt_key:
    url: https://pkgs.k8s.io/core:/stable:/{{ kubernetes_version.split('.')[0] }}.{{ kubernetes_version.split('.')[1] }}/deb/Release.key
    keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    state: present
  tags: kubernetes_component

# sign the keyring
- name: Sign the Kubernetes keyring
  ansible.builtin.command: gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  args:
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  tags: kubernetes_component
  
- name: Add Kubernetes repository
  ansible.builtin.apt_repository:
    repo: >-
      deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg]
      https://pkgs.k8s.io/core:/stable:/{{ kubernetes_version.split('.')[0] }}.{{ kubernetes_version.split('.')[1] }}/deb /
    filename: kubernetes
    state: present
  tags: 
    - kubernetes_component_kubeadm
    - kubernetes_component_kubelet

- name: Update package list and install kube components
  ansible.builtin.apt:
    name:
      - kubeadm={{ kubernetes_package_version }}
    state: present
    allow_unauthenticated: true
    allow_change_held_packages: true
    allow_downgrade: true
  tags: kubernetes_component_kubeadm

- name: Hold kube packages
  ansible.builtin.dpkg_selections:
    name: kubeadm
    selection: hold
  tags: kubernetes_component_kubeadm

- name: Update package list and install kube components
  ansible.builtin.apt:
    name:
      - kubelet={{ kubernetes_package_version }}
      - kubectl={{ kubernetes_package_version }}
    state: present
    allow_unauthenticated: true
    allow_change_held_packages: true
    allow_downgrade: true
  tags: kubernetes_component_kubelet

- name: Hold kube packages
  ansible.builtin.dpkg_selections:
    name: kubelet
    selection: hold
  tags: kubernetes_component_kubelet

- name: Hold kube packages
  ansible.builtin.dpkg_selections:
    name: kubectl
    selection: hold
  tags: kubernetes_component_kubelet

- name: Enable kubelet
  ansible.builtin.systemd_service:
    name: kubelet
    enabled: true
    state: started
    daemon_reload: true
  tags: kubernetes_component_kubelet

- name: Restart kubelet
  ansible.builtin.systemd_service:
    name: kubelet
    enabled: true
    state: restarted
    daemon_reload: true
  tags: kubernetes_component_kubelet

# install helm
- name: Add Helm GPG key
  ansible.builtin.get_url:
    url: https://packages.buildkite.com/helm-linux/helm-debian/gpgkey
    dest: /usr/share/keyrings/helm.gpg
    mode: '0644'
  register: helm_gpg

- name: Dearmor Helm GPG key
  ansible.builtin.command: gpg --dearmor -o /usr/share/keyrings/helm.gpg
  args:
    creates: /usr/share/keyrings/helm.gpg
  tags: install_helm

- name: Install apt-transport-https
  ansible.builtin.apt:
    name: apt-transport-https
    state: present
  tags: install_helm

- name: Add Helm repository
  ansible.builtin.apt_repository:
    repo: >-
      deb [signed-by=/usr/share/keyrings/helm.gpg]
      https://packages.buildkite.com/helm-linux/helm-debian/any/ any main
    filename: helm-stable-debian
    state: present
  tags: install_helm

- name: Update repositories cache and install "helm" package
  ansible.builtin.apt:
    name: helm
    update_cache: true
    state: present
  tags: install_helm

# install k9s
- name: Install k9s
  ansible.builtin.get_url:
    url: https://github.com/derailed/k9s/releases/download/v0.32.7/k9s_linux_amd64.deb
    dest: /tmp/k9s.deb
  tags: install_k9s

- name: Install k9s
  ansible.builtin.apt:
    deb: /tmp/k9s.deb
    state: present
  tags: install_k9s

# # install wireguard
# - name: Install wireguard
#   ansible.builtin.apt:
#     name: wireguard
#     state: present
#   tags: install_wireguard
#   when: calico_node_to_node_encryption

# install etcd
- name: Install wireguard
  ansible.builtin.apt:
    name: etcd-client
    state: present
  tags: install_etcd
