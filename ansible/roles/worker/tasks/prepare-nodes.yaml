---
- name: Disable swap immediately
  command: swapoff -a

- name: Ensure UFW is installed
  ansible.builtin.package:
    name: ufw
    state: present

- name: Reset UFW rules
  ansible.builtin.command: ufw --force reset
  changed_when: false

- name: Set default deny incoming
  community.general.ufw:
    rule: deny
    direction: incoming

- name: Set default allow outgoing
  community.general.ufw:
    rule: allow
    direction: outgoing

- name: Allow public ports
  community.general.ufw:
    rule: allow
    port: "{{ item }}"
    proto: tcp
  loop: "{{ ufw_public_ports }}"

- name: Allow all from private CIDR
  community.general.ufw:
    rule: allow
    from_ip: "{{ ufw_private_cidr }}"

- name: Enable ufw
  community.general.ufw:
    state: enabled

- name: Load required kernel modules
  community.general.modprobe:
    name: overlay
    state: present

- name: Load required kernel modules
  community.general.modprobe:
    name: br_netfilter
    state: present

- name: Apply sysctl settings
  ansible.posix.sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1

- name: Disable swap
  ansible.posix.sysctl:
    name: vm.swappiness
    value: 0

- name: Update apt package cache
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600 # Update cache if older than 1 hour (in seconds)

- name: Upgrade all installed packages
  ansible.builtin.apt:
    upgrade: dist 

- name: Install dependencies for containerd
  ansible.builtin.apt:
    name:
      - software-properties-common
      - gpg
      - curl
      - apt-transport-https
      - ca-certificates
    state: present

- name: Create directory for Docker's GPG key
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: "0755"

- name: Add Docker's official GPG key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    keyring: /etc/apt/keyrings/docker.gpg
    state: present

- name: Print architecture variables
  ansible.builtin.debug:
    msg: "Architecture: {{ ansible_architecture }}, Codename: {{ ansible_lsb.codename }}"

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: >-
      deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg]
      https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
    filename: docker
    state: present

- name: Install containerd
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: true

- name: Add Docker group
  ansible.builtin.group:
    name: docker
    state: present

- name: Add user to Docker group
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true

- name: Enable and start Docker services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
    state: started
  loop:
    - docker.service
    - containerd.service

- name: Create containerd configuration directory
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: "0755"

- name: Generate containerd default configuration
  ansible.builtin.command: containerd config default
  register: containerd_config

- name: Save the join command to a file
  ansible.builtin.copy:
    content: "{{ containerd_config.stdout }}"
    dest: /etc/containerd/config.toml
    mode: "0755"

- name: Enable SystemdCgroup in containerd configuration
  ansible.builtin.lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^(\s*)SystemdCgroup\s*=\s*false'
    line: '\1SystemdCgroup = true'
    backrefs: true

- name: Reload systemd and enable containerd
  ansible.builtin.systemd:
    name: containerd
    enabled: true
    state: restarted

- name: Download Kubernetes GPG key
  ansible.builtin.apt_key:
    url: https://pkgs.k8s.io/core:/stable:/{{ kubernetes_version.split('.')[0] }}.{{ kubernetes_version.split('.')[1] }}/deb/Release.key
    keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    state: present
  tags: kubernetes_component

# sign the keyring
- name: Sign the Kubernetes keyring
  ansible.builtin.command: gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  args:
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  tags: kubernetes_component
  
- name: Add Kubernetes repository
  ansible.builtin.apt_repository:
    repo: >-
      deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg]
      https://pkgs.k8s.io/core:/stable:/{{ kubernetes_version.split('.')[0] }}.{{ kubernetes_version.split('.')[1] }}/deb /
    filename: kubernetes
    state: present
  tags: kubernetes_component

- name: Update package list and install kube components
  ansible.builtin.apt:
    name:
      - kubelet={{ kubernetes_package_version }}
      - kubeadm={{ kubernetes_package_version }}
      - kubectl={{ kubernetes_package_version }}
    state: present
    allow_unauthenticated: true
    allow_change_held_packages: true
    allow_downgrade: true
  tags: kubernetes_component

- name: Hold kube packages
  ansible.builtin.dpkg_selections:
    name: kubelet
    selection: hold
  tags: kubernetes_component

- name: Hold kube packages
  ansible.builtin.dpkg_selections:
    name: kubeadm
    selection: hold
  tags: kubernetes_component

- name: Hold kube packages
  ansible.builtin.dpkg_selections:
    name: kubectl
    selection: hold
  tags: kubernetes_component

- name: Enable kubelet
  ansible.builtin.systemd_service:
    name: kubelet
    enabled: true
    state: started
    daemon_reload: true
  tags: kubernetes_component

- name: Enable kubelet
  ansible.builtin.systemd_service:
    name: kubelet
    enabled: true
    state: restarted
    daemon_reload: true
  tags: kubernetes_component


# install wireguard
- name: Install wireguard
  ansible.builtin.apt:
    name: wireguard
    state: present
  tags: install_wireguard
